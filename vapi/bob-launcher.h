/* bob-launcher.h generated by valac 0.56.18-dirty, the Vala compiler, do not modify */

#ifndef __BOB_LAUNCHER_H__
#define __BOB_LAUNCHER_H__

#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gio/gio.h>
#include <match.h>
#include <gio/gdesktopappinfo.h>
#include <gtk/gtk.h>
#include <gdk/gdk.h>
#include <pango/pango.h>
#include <data-sink-actions.h>
#include <result-container.h>
#include <immintrin.h>
#include <stdatomic.h>

G_BEGIN_DECLS

#if !defined(VALA_EXTERN)
#if defined(_MSC_VER)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif
#define BOB_LAUNCHER_FILE_MATCH_SEARCH_FILE_ATTRIBUTES G_FILE_ATTRIBUTE_STANDARD_NAME "," G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME "," G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION "," G_FILE_ATTRIBUTE_STANDARD_TYPE "," G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE "," G_FILE_ATTRIBUTE_STANDARD_SIZE "," G_FILE_ATTRIBUTE_STANDARD_ICON "," G_FILE_ATTRIBUTE_TIME_CREATED "," G_FILE_ATTRIBUTE_TIME_MODIFIED "," G_FILE_ATTRIBUTE_RECENT_MODIFIED "," G_FILE_ATTRIBUTE_UNIX_MODE "," G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK "," G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET "," G_FILE_ATTRIBUTE_OWNER_USER "," G_FILE_ATTRIBUTE_OWNER_GROUP "," G_FILE_ATTRIBUTE_THUMBNAIL_PATH_XXLARGE "," G_FILE_ATTRIBUTE_THUMBNAILING_FAILED
#define BOB_LAUNCHER_DESCRIPTION_spacing 0
#define BOB_LAUNCHER_BOB_LAUNCHER_APP_ID "io.github.trbjo.bob.launcher"
#define BOB_LAUNCHER_BOB_LAUNCHER_OBJECT_PATH "/io/github/trbjo/bob/launcher"

#define BOB_LAUNCHER_TYPE_IFILE (bob_launcher_ifile_get_type ())
#define BOB_LAUNCHER_IFILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_IFILE, BobLauncherIFile))
#define BOB_LAUNCHER_IS_IFILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_IFILE))
#define BOB_LAUNCHER_IFILE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), BOB_LAUNCHER_TYPE_IFILE, BobLauncherIFileIface))

typedef struct _BobLauncherIFile BobLauncherIFile;
typedef struct _BobLauncherIFileIface BobLauncherIFileIface;

#define BOB_LAUNCHER_TYPE_ITEXT_MATCH (bob_launcher_itext_match_get_type ())
#define BOB_LAUNCHER_ITEXT_MATCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_ITEXT_MATCH, BobLauncherITextMatch))
#define BOB_LAUNCHER_IS_ITEXT_MATCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_ITEXT_MATCH))
#define BOB_LAUNCHER_ITEXT_MATCH_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), BOB_LAUNCHER_TYPE_ITEXT_MATCH, BobLauncherITextMatchIface))

typedef struct _BobLauncherITextMatch BobLauncherITextMatch;
typedef struct _BobLauncherITextMatchIface BobLauncherITextMatchIface;

#define BOB_LAUNCHER_TYPE_IACTION_MATCH (bob_launcher_iaction_match_get_type ())
#define BOB_LAUNCHER_IACTION_MATCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_IACTION_MATCH, BobLauncherIActionMatch))
#define BOB_LAUNCHER_IS_IACTION_MATCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_IACTION_MATCH))
#define BOB_LAUNCHER_IACTION_MATCH_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), BOB_LAUNCHER_TYPE_IACTION_MATCH, BobLauncherIActionMatchIface))

typedef struct _BobLauncherIActionMatch BobLauncherIActionMatch;
typedef struct _BobLauncherIActionMatchIface BobLauncherIActionMatchIface;

#define BOB_LAUNCHER_TYPE_IRICH_DESCRIPTION (bob_launcher_irich_description_get_type ())
#define BOB_LAUNCHER_IRICH_DESCRIPTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_IRICH_DESCRIPTION, BobLauncherIRichDescription))
#define BOB_LAUNCHER_IS_IRICH_DESCRIPTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_IRICH_DESCRIPTION))
#define BOB_LAUNCHER_IRICH_DESCRIPTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), BOB_LAUNCHER_TYPE_IRICH_DESCRIPTION, BobLauncherIRichDescriptionIface))

typedef struct _BobLauncherIRichDescription BobLauncherIRichDescription;
typedef struct _BobLauncherIRichDescriptionIface BobLauncherIRichDescriptionIface;

#define BOB_LAUNCHER_TYPE_MATCH (bob_launcher_match_get_type ())
#define BOB_LAUNCHER_MATCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_MATCH, BobLauncherMatch))
#define BOB_LAUNCHER_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_MATCH, BobLauncherMatchClass))
#define BOB_LAUNCHER_IS_MATCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_MATCH))
#define BOB_LAUNCHER_IS_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_MATCH))
#define BOB_LAUNCHER_MATCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_MATCH, BobLauncherMatchClass))

typedef struct _BobLauncherMatch BobLauncherMatch;
typedef struct _BobLauncherMatchClass BobLauncherMatchClass;

#define BOB_LAUNCHER_TYPE_DESCRIPTION (bob_launcher_description_get_type ())
#define BOB_LAUNCHER_DESCRIPTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_DESCRIPTION, BobLauncherDescription))
#define BOB_LAUNCHER_DESCRIPTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_DESCRIPTION, BobLauncherDescriptionClass))
#define BOB_LAUNCHER_IS_DESCRIPTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_DESCRIPTION))
#define BOB_LAUNCHER_IS_DESCRIPTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_DESCRIPTION))
#define BOB_LAUNCHER_DESCRIPTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_DESCRIPTION, BobLauncherDescriptionClass))

typedef struct _BobLauncherDescription BobLauncherDescription;
typedef struct _BobLauncherDescriptionClass BobLauncherDescriptionClass;

#define BOB_LAUNCHER_TYPE_IURL_MATCH (bob_launcher_iurl_match_get_type ())
#define BOB_LAUNCHER_IURL_MATCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_IURL_MATCH, BobLauncherIURLMatch))
#define BOB_LAUNCHER_IS_IURL_MATCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_IURL_MATCH))
#define BOB_LAUNCHER_IURL_MATCH_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), BOB_LAUNCHER_TYPE_IURL_MATCH, BobLauncherIURLMatchIface))

typedef struct _BobLauncherIURLMatch BobLauncherIURLMatch;
typedef struct _BobLauncherIURLMatchIface BobLauncherIURLMatchIface;

#define BOB_LAUNCHER_TYPE_IDESKTOP_APPLICATION (bob_launcher_idesktop_application_get_type ())
#define BOB_LAUNCHER_IDESKTOP_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_IDESKTOP_APPLICATION, BobLauncherIDesktopApplication))
#define BOB_LAUNCHER_IS_IDESKTOP_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_IDESKTOP_APPLICATION))
#define BOB_LAUNCHER_IDESKTOP_APPLICATION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), BOB_LAUNCHER_TYPE_IDESKTOP_APPLICATION, BobLauncherIDesktopApplicationIface))

typedef struct _BobLauncherIDesktopApplication BobLauncherIDesktopApplication;
typedef struct _BobLauncherIDesktopApplicationIface BobLauncherIDesktopApplicationIface;

#define BOB_LAUNCHER_TYPE_ACTION (bob_launcher_action_get_type ())
#define BOB_LAUNCHER_ACTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_ACTION, BobLauncherAction))
#define BOB_LAUNCHER_ACTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_ACTION, BobLauncherActionClass))
#define BOB_LAUNCHER_IS_ACTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_ACTION))
#define BOB_LAUNCHER_IS_ACTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_ACTION))
#define BOB_LAUNCHER_ACTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_ACTION, BobLauncherActionClass))

typedef struct _BobLauncherAction BobLauncherAction;
typedef struct _BobLauncherActionClass BobLauncherActionClass;

#define BOB_LAUNCHER_TYPE_BOB_LAUNCH_CONTEXT (bob_launcher_bob_launch_context_get_type ())
#define BOB_LAUNCHER_BOB_LAUNCH_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_BOB_LAUNCH_CONTEXT, BobLauncherBobLaunchContext))
#define BOB_LAUNCHER_BOB_LAUNCH_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_BOB_LAUNCH_CONTEXT, BobLauncherBobLaunchContextClass))
#define BOB_LAUNCHER_IS_BOB_LAUNCH_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_BOB_LAUNCH_CONTEXT))
#define BOB_LAUNCHER_IS_BOB_LAUNCH_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_BOB_LAUNCH_CONTEXT))
#define BOB_LAUNCHER_BOB_LAUNCH_CONTEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_BOB_LAUNCH_CONTEXT, BobLauncherBobLaunchContextClass))

typedef struct _BobLauncherBobLaunchContext BobLauncherBobLaunchContext;
typedef struct _BobLauncherBobLaunchContextClass BobLauncherBobLaunchContextClass;
typedef struct _BobLauncherBobLaunchContextPrivate BobLauncherBobLaunchContextPrivate;
typedef struct _BobLauncherMatchPrivate BobLauncherMatchPrivate;

#define BOB_LAUNCHER_TYPE_FILE_MATCH (bob_launcher_file_match_get_type ())
#define BOB_LAUNCHER_FILE_MATCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_FILE_MATCH, BobLauncherFileMatch))
#define BOB_LAUNCHER_FILE_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_FILE_MATCH, BobLauncherFileMatchClass))
#define BOB_LAUNCHER_IS_FILE_MATCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_FILE_MATCH))
#define BOB_LAUNCHER_IS_FILE_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_FILE_MATCH))
#define BOB_LAUNCHER_FILE_MATCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_FILE_MATCH, BobLauncherFileMatchClass))

typedef struct _BobLauncherFileMatch BobLauncherFileMatch;
typedef struct _BobLauncherFileMatchClass BobLauncherFileMatchClass;
typedef struct _BobLauncherFileMatchPrivate BobLauncherFileMatchPrivate;

#define BOB_LAUNCHER_TYPE_PAINTABLE_WIDGET_WRAPPER (bob_launcher_paintable_widget_wrapper_get_type ())
#define BOB_LAUNCHER_PAINTABLE_WIDGET_WRAPPER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_PAINTABLE_WIDGET_WRAPPER, BobLauncherPaintableWidgetWrapper))
#define BOB_LAUNCHER_PAINTABLE_WIDGET_WRAPPER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_PAINTABLE_WIDGET_WRAPPER, BobLauncherPaintableWidgetWrapperClass))
#define BOB_LAUNCHER_IS_PAINTABLE_WIDGET_WRAPPER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_PAINTABLE_WIDGET_WRAPPER))
#define BOB_LAUNCHER_IS_PAINTABLE_WIDGET_WRAPPER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_PAINTABLE_WIDGET_WRAPPER))
#define BOB_LAUNCHER_PAINTABLE_WIDGET_WRAPPER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_PAINTABLE_WIDGET_WRAPPER, BobLauncherPaintableWidgetWrapperClass))

typedef struct _BobLauncherPaintableWidgetWrapper BobLauncherPaintableWidgetWrapper;
typedef struct _BobLauncherPaintableWidgetWrapperClass BobLauncherPaintableWidgetWrapperClass;
typedef struct _BobLauncherPaintableWidgetWrapperPrivate BobLauncherPaintableWidgetWrapperPrivate;
typedef enum  {
	BOB_LAUNCHER_FRAGMENT_TYPE_IMAGE,
	BOB_LAUNCHER_FRAGMENT_TYPE_TEXT,
	BOB_LAUNCHER_FRAGMENT_TYPE_CONTAINER
} BobLauncherFragmentType;

#define BOB_LAUNCHER_TYPE_FRAGMENT_TYPE (bob_launcher_fragment_type_get_type ())
typedef struct _BobLauncherDescriptionPrivate BobLauncherDescriptionPrivate;
typedef void (*BobLauncherFragmentFunc) (gpointer user_data, GError** error);

#define BOB_LAUNCHER_TYPE_SOURCE_MATCH (bob_launcher_source_match_get_type ())
#define BOB_LAUNCHER_SOURCE_MATCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_SOURCE_MATCH, BobLauncherSourceMatch))
#define BOB_LAUNCHER_SOURCE_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_SOURCE_MATCH, BobLauncherSourceMatchClass))
#define BOB_LAUNCHER_IS_SOURCE_MATCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_SOURCE_MATCH))
#define BOB_LAUNCHER_IS_SOURCE_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_SOURCE_MATCH))
#define BOB_LAUNCHER_SOURCE_MATCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_SOURCE_MATCH, BobLauncherSourceMatchClass))

typedef struct _BobLauncherSourceMatch BobLauncherSourceMatch;
typedef struct _BobLauncherSourceMatchClass BobLauncherSourceMatchClass;
typedef struct _BobLauncherSourceMatchPrivate BobLauncherSourceMatchPrivate;
typedef struct _BobLauncherActionPrivate BobLauncherActionPrivate;
typedef gint16 BobLauncherScore;

#define BOB_LAUNCHER_TYPE_ACTION_TARGET (bob_launcher_action_target_get_type ())
#define BOB_LAUNCHER_ACTION_TARGET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_ACTION_TARGET, BobLauncherActionTarget))
#define BOB_LAUNCHER_ACTION_TARGET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_ACTION_TARGET, BobLauncherActionTargetClass))
#define BOB_LAUNCHER_IS_ACTION_TARGET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_ACTION_TARGET))
#define BOB_LAUNCHER_IS_ACTION_TARGET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_ACTION_TARGET))
#define BOB_LAUNCHER_ACTION_TARGET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_ACTION_TARGET, BobLauncherActionTargetClass))

typedef struct _BobLauncherActionTarget BobLauncherActionTarget;
typedef struct _BobLauncherActionTargetClass BobLauncherActionTargetClass;
typedef struct _BobLauncherActionTargetPrivate BobLauncherActionTargetPrivate;

#define BOB_LAUNCHER_TYPE_UNKNOWN_MATCH (bob_launcher_unknown_match_get_type ())
#define BOB_LAUNCHER_UNKNOWN_MATCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_UNKNOWN_MATCH, BobLauncherUnknownMatch))
#define BOB_LAUNCHER_UNKNOWN_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_UNKNOWN_MATCH, BobLauncherUnknownMatchClass))
#define BOB_LAUNCHER_IS_UNKNOWN_MATCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_UNKNOWN_MATCH))
#define BOB_LAUNCHER_IS_UNKNOWN_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_UNKNOWN_MATCH))
#define BOB_LAUNCHER_UNKNOWN_MATCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_UNKNOWN_MATCH, BobLauncherUnknownMatchClass))

typedef struct _BobLauncherUnknownMatch BobLauncherUnknownMatch;
typedef struct _BobLauncherUnknownMatchClass BobLauncherUnknownMatchClass;
typedef struct _BobLauncherUnknownMatchPrivate BobLauncherUnknownMatchPrivate;

#define BOB_LAUNCHER_TYPE_PLUGIN_BASE (bob_launcher_plugin_base_get_type ())
#define BOB_LAUNCHER_PLUGIN_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_PLUGIN_BASE, BobLauncherPluginBase))
#define BOB_LAUNCHER_PLUGIN_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_PLUGIN_BASE, BobLauncherPluginBaseClass))
#define BOB_LAUNCHER_IS_PLUGIN_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_PLUGIN_BASE))
#define BOB_LAUNCHER_IS_PLUGIN_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_PLUGIN_BASE))
#define BOB_LAUNCHER_PLUGIN_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_PLUGIN_BASE, BobLauncherPluginBaseClass))

typedef struct _BobLauncherPluginBase BobLauncherPluginBase;
typedef struct _BobLauncherPluginBaseClass BobLauncherPluginBaseClass;
typedef struct _BobLauncherPluginBasePrivate BobLauncherPluginBasePrivate;

#define BOB_LAUNCHER_TYPE_SEARCH_BASE (bob_launcher_search_base_get_type ())
#define BOB_LAUNCHER_SEARCH_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOB_LAUNCHER_TYPE_SEARCH_BASE, BobLauncherSearchBase))
#define BOB_LAUNCHER_SEARCH_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOB_LAUNCHER_TYPE_SEARCH_BASE, BobLauncherSearchBaseClass))
#define BOB_LAUNCHER_IS_SEARCH_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOB_LAUNCHER_TYPE_SEARCH_BASE))
#define BOB_LAUNCHER_IS_SEARCH_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOB_LAUNCHER_TYPE_SEARCH_BASE))
#define BOB_LAUNCHER_SEARCH_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOB_LAUNCHER_TYPE_SEARCH_BASE, BobLauncherSearchBaseClass))

typedef struct _BobLauncherSearchBase BobLauncherSearchBase;
typedef struct _BobLauncherSearchBaseClass BobLauncherSearchBaseClass;
typedef struct _BobLauncherSearchBasePrivate BobLauncherSearchBasePrivate;
typedef void (*BobLauncherThreadingTaskFunc) (gpointer user_data);

struct _BobLauncherIFileIface {
	GTypeInterface parent_iface;
	gchar* (*get_file_path) (BobLauncherIFile* self);
	gchar* (*get_uri) (BobLauncherIFile* self);
	gchar* (*get_mime_type) (BobLauncherIFile* self);
	GFile* (*get_file) (BobLauncherIFile* self);
};

struct _BobLauncherITextMatchIface {
	GTypeInterface parent_iface;
	gchar* (*get_text) (BobLauncherITextMatch* self);
};

struct _BobLauncherIActionMatchIface {
	GTypeInterface parent_iface;
	gboolean (*do_action) (BobLauncherIActionMatch* self);
};

struct _BobLauncherIRichDescriptionIface {
	GTypeInterface parent_iface;
	BobLauncherDescription* (*get_rich_description) (BobLauncherIRichDescription* self, needle_info* si);
};

struct _BobLauncherIURLMatchIface {
	GTypeInterface parent_iface;
	gchar* (*get_url) (BobLauncherIURLMatch* self);
};

struct _BobLauncherIDesktopApplicationIface {
	GTypeInterface parent_iface;
	gboolean (*needs_terminal) (BobLauncherIDesktopApplication* self);
	GPtrArray* (*get_actions) (BobLauncherIDesktopApplication* self);
	GDesktopAppInfo* (*get_desktop_appinfo) (BobLauncherIDesktopApplication* self);
};

struct _BobLauncherBobLaunchContext {
	GObject parent_instance;
	BobLauncherBobLaunchContextPrivate * priv;
};

struct _BobLauncherBobLaunchContextClass {
	GObjectClass parent_class;
};

struct _BobLauncherMatch {
	GObject parent_instance;
	BobLauncherMatchPrivate * priv;
};

struct _BobLauncherMatchClass {
	GObjectClass parent_class;
	gchar* (*get_title) (BobLauncherMatch* self);
	gchar* (*get_icon_name) (BobLauncherMatch* self);
	gchar* (*get_description) (BobLauncherMatch* self);
	GtkWidget* (*get_tooltip) (BobLauncherMatch* self);
};

struct _BobLauncherFileMatch {
	BobLauncherMatch parent_instance;
	BobLauncherFileMatchPrivate * priv;
};

struct _BobLauncherFileMatchClass {
	BobLauncherMatchClass parent_class;
};

struct _BobLauncherPaintableWidgetWrapper {
	GtkWidget parent_instance;
	BobLauncherPaintableWidgetWrapperPrivate * priv;
};

struct _BobLauncherPaintableWidgetWrapperClass {
	GtkWidgetClass parent_class;
};

struct _BobLauncherDescription {
	GObject parent_instance;
	BobLauncherDescriptionPrivate * priv;
	gchar* text;
	gchar* css_class;
	BobLauncherFragmentType fragment_type;
	GPtrArray* children;
	BobLauncherFragmentFunc fragment_func;
	gpointer fragment_func_target;
	GDestroyNotify fragment_func_target_destroy_notify;
	PangoAttrList* attributes;
	GtkOrientation orientation;
};

struct _BobLauncherDescriptionClass {
	GObjectClass parent_class;
};

struct _BobLauncherSourceMatch {
	BobLauncherMatch parent_instance;
	BobLauncherSourceMatchPrivate * priv;
};

struct _BobLauncherSourceMatchClass {
	BobLauncherMatchClass parent_class;
};

struct _BobLauncherAction {
	BobLauncherMatch parent_instance;
	BobLauncherActionPrivate * priv;
};

struct _BobLauncherActionClass {
	BobLauncherMatchClass parent_class;
	gboolean (*do_execute) (BobLauncherAction* self, BobLauncherMatch* source, BobLauncherMatch* target);
	gboolean (*execute) (BobLauncherAction* self, BobLauncherMatch* source, BobLauncherMatch* target);
	BobLauncherScore (*get_relevancy) (BobLauncherAction* self, BobLauncherMatch* m);
};

struct _BobLauncherActionTarget {
	BobLauncherAction parent_instance;
	BobLauncherActionTargetPrivate * priv;
};

struct _BobLauncherActionTargetClass {
	BobLauncherActionClass parent_class;
};

struct _BobLauncherUnknownMatch {
	BobLauncherMatch parent_instance;
	BobLauncherUnknownMatchPrivate * priv;
};

struct _BobLauncherUnknownMatchClass {
	BobLauncherMatchClass parent_class;
};

struct _BobLauncherPluginBase {
	BobLauncherMatch parent_instance;
	BobLauncherPluginBasePrivate * priv;
	gchar* title;
	gchar* description;
	gchar* icon_name;
};

struct _BobLauncherPluginBaseClass {
	BobLauncherMatchClass parent_class;
	gboolean (*activate) (BobLauncherPluginBase* self);
	void (*deactivate) (BobLauncherPluginBase* self);
	void (*on_setting_changed) (BobLauncherPluginBase* self, const gchar* key, GVariant* value);
	gboolean (*handle_base_settings) (BobLauncherPluginBase* self, GSettings* settings, const gchar* key);
	gchar* (*to_string) (BobLauncherPluginBase* self);
	void (*find_for_match) (BobLauncherPluginBase* self, BobLauncherMatch* match, ActionSet* rs);
	GPtrArray* (*get_search_providers) (BobLauncherPluginBase* self);
	void (*set_search_providers) (BobLauncherPluginBase* self, GPtrArray* value);
};

struct _BobLauncherSearchBase {
	BobLauncherPluginBase parent_instance;
	BobLauncherSearchBasePrivate * priv;
};

struct _BobLauncherSearchBaseClass {
	BobLauncherPluginBaseClass parent_class;
	void (*search) (BobLauncherSearchBase* self, ResultContainer* rs);
	void (*search_shard) (BobLauncherSearchBase* self, ResultContainer* rs, guint shard_id);
	gboolean (*get_prefer_insertion_order) (BobLauncherSearchBase* self);
	guint (*get_shard_count) (BobLauncherSearchBase* self);
	void (*set_shard_count) (BobLauncherSearchBase* self, guint value);
};

VALA_EXTERN GType bob_launcher_ifile_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherIFile, g_object_unref)
VALA_EXTERN gchar* bob_launcher_ifile_get_file_path (BobLauncherIFile* self);
VALA_EXTERN gchar* bob_launcher_ifile_get_uri (BobLauncherIFile* self);
VALA_EXTERN gchar* bob_launcher_ifile_get_mime_type (BobLauncherIFile* self);
VALA_EXTERN GFile* bob_launcher_ifile_get_file (BobLauncherIFile* self);
VALA_EXTERN GType bob_launcher_itext_match_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherITextMatch, g_object_unref)
VALA_EXTERN gchar* bob_launcher_itext_match_get_text (BobLauncherITextMatch* self);
VALA_EXTERN GType bob_launcher_iaction_match_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherIActionMatch, g_object_unref)
VALA_EXTERN gboolean bob_launcher_iaction_match_do_action (BobLauncherIActionMatch* self);
VALA_EXTERN GType bob_launcher_match_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherMatch, g_object_unref)
VALA_EXTERN GType bob_launcher_description_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherDescription, g_object_unref)
VALA_EXTERN GType bob_launcher_irich_description_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherIRichDescription, g_object_unref)
VALA_EXTERN BobLauncherDescription* bob_launcher_irich_description_get_rich_description (BobLauncherIRichDescription* self,
                                                                             needle_info* si);
VALA_EXTERN GType bob_launcher_iurl_match_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherIURLMatch, g_object_unref)
VALA_EXTERN gchar* bob_launcher_iurl_match_get_url (BobLauncherIURLMatch* self);
VALA_EXTERN GType bob_launcher_action_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherAction, g_object_unref)
VALA_EXTERN GType bob_launcher_idesktop_application_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherIDesktopApplication, g_object_unref)
VALA_EXTERN gboolean bob_launcher_idesktop_application_needs_terminal (BobLauncherIDesktopApplication* self);
VALA_EXTERN GPtrArray* bob_launcher_idesktop_application_get_actions (BobLauncherIDesktopApplication* self);
VALA_EXTERN GDesktopAppInfo* bob_launcher_idesktop_application_get_desktop_appinfo (BobLauncherIDesktopApplication* self);
gchar* g_desktop_app_info_get_string_from_group (GDesktopAppInfo* info,
                                                 const gchar* group_name,
                                                 const gchar* key);
VALA_EXTERN GType bob_launcher_bob_launch_context_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherBobLaunchContext, g_object_unref)
VALA_EXTERN BobLauncherBobLaunchContext* bob_launcher_bob_launch_context_get_instance (void);
VALA_EXTERN gboolean bob_launcher_bob_launch_context_launch_command (BobLauncherBobLaunchContext* self,
                                                         const gchar* identifier,
                                                         gchar** argv,
                                                         gint argv_length1,
                                                         gboolean blocking,
                                                         gboolean needs_terminal);
VALA_EXTERN gboolean bob_launcher_bob_launch_context_launch_file (BobLauncherBobLaunchContext* self,
                                                      GFile* file);
VALA_EXTERN gboolean bob_launcher_bob_launch_context_launch_uri (BobLauncherBobLaunchContext* self,
                                                     const gchar* uri);
VALA_EXTERN gboolean bob_launcher_bob_launch_context_launch_app (BobLauncherBobLaunchContext* self,
                                                     GAppInfo* app_info,
                                                     gboolean needs_terminal,
                                                     const gchar* action);
VALA_EXTERN gboolean bob_launcher_bob_launch_context_launch_with_uri (BobLauncherBobLaunchContext* self,
                                                          GAppInfo* app_info,
                                                          const gchar* uri,
                                                          const gchar* action);
VALA_EXTERN gboolean bob_launcher_bob_launch_context_launch_app_with_files (BobLauncherBobLaunchContext* self,
                                                                GAppInfo* app_info,
                                                                GList* files,
                                                                const gchar* action);
VALA_EXTERN GType bob_launcher_file_match_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherFileMatch, g_object_unref)
VALA_EXTERN GPtrArray* bob_launcher_file_match_split_path_with_separators (const gchar* path);
VALA_EXTERN BobLauncherDescription* bob_launcher_file_match_generate_description_for_file (needle_info* si,
                                                                               const gchar* file_path,
                                                                               GDateTime* timestamp);
VALA_EXTERN BobLauncherFileMatch* bob_launcher_file_match_new_from_path (const gchar* filename);
VALA_EXTERN BobLauncherFileMatch* bob_launcher_file_match_construct_from_path (GType object_type,
                                                                   const gchar* filename);
VALA_EXTERN BobLauncherFileMatch* bob_launcher_file_match_new_from_uri (const gchar* uri);
VALA_EXTERN BobLauncherFileMatch* bob_launcher_file_match_construct_from_uri (GType object_type,
                                                                  const gchar* uri);
VALA_EXTERN const gchar* bob_launcher_file_match_get_filename (BobLauncherFileMatch* self);
VALA_EXTERN GDateTime* bob_launcher_file_match_get_timestamp (BobLauncherFileMatch* self);
VALA_EXTERN void bob_launcher_file_match_set_timestamp (BobLauncherFileMatch* self,
                                            GDateTime* value);
VALA_EXTERN GType bob_launcher_paintable_widget_wrapper_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherPaintableWidgetWrapper, g_object_unref)
VALA_EXTERN void bob_launcher_paintable_widget_wrapper_load (BobLauncherPaintableWidgetWrapper* self);
VALA_EXTERN GdkPaintable* bob_launcher_paintable_widget_wrapper_icon_to_paintable (BobLauncherPaintableWidgetWrapper* self,
                                                                       GIcon* icon,
                                                                       gint size);
VALA_EXTERN BobLauncherPaintableWidgetWrapper* bob_launcher_paintable_widget_wrapper_new (void);
VALA_EXTERN BobLauncherPaintableWidgetWrapper* bob_launcher_paintable_widget_wrapper_construct (GType object_type);
VALA_EXTERN GFile* bob_launcher_paintable_widget_wrapper_get_file (BobLauncherPaintableWidgetWrapper* self);
VALA_EXTERN GFileInfo* bob_launcher_paintable_widget_wrapper_get_file_info (BobLauncherPaintableWidgetWrapper* self);
VALA_EXTERN void bob_launcher_paintable_widget_wrapper_set_file_info (BobLauncherPaintableWidgetWrapper* self,
                                                          GFileInfo* value);
VALA_EXTERN GType bob_launcher_fragment_type_get_type (void) G_GNUC_CONST ;
VALA_EXTERN BobLauncherDescription* bob_launcher_description_new (const gchar* text,
                                                      const gchar* css_class,
                                                      BobLauncherFragmentType fragment_type,
                                                      BobLauncherFragmentFunc fragment_func,
                                                      gpointer fragment_func_target,
                                                      GDestroyNotify fragment_func_target_destroy_notify,
                                                      PangoAttrList* attrs);
VALA_EXTERN BobLauncherDescription* bob_launcher_description_construct (GType object_type,
                                                            const gchar* text,
                                                            const gchar* css_class,
                                                            BobLauncherFragmentType fragment_type,
                                                            BobLauncherFragmentFunc fragment_func,
                                                            gpointer fragment_func_target,
                                                            GDestroyNotify fragment_func_target_destroy_notify,
                                                            PangoAttrList* attrs);
VALA_EXTERN BobLauncherDescription* bob_launcher_description_new_container (const gchar* css_class,
                                                                GtkOrientation orientation);
VALA_EXTERN BobLauncherDescription* bob_launcher_description_construct_container (GType object_type,
                                                                      const gchar* css_class,
                                                                      GtkOrientation orientation);
VALA_EXTERN void bob_launcher_description_add_child (BobLauncherDescription* self,
                                         BobLauncherDescription* child);
VALA_EXTERN GType bob_launcher_source_match_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherSourceMatch, g_object_unref)
VALA_EXTERN BobLauncherSourceMatch* bob_launcher_source_match_construct (GType object_type);
VALA_EXTERN BobLauncherMatch* bob_launcher_match_construct (GType object_type);
VALA_EXTERN gchar* bob_launcher_match_get_title (BobLauncherMatch* self);
VALA_EXTERN gchar* bob_launcher_match_get_icon_name (BobLauncherMatch* self);
VALA_EXTERN gchar* bob_launcher_match_get_description (BobLauncherMatch* self);
VALA_EXTERN GtkWidget* bob_launcher_match_get_tooltip (BobLauncherMatch* self);
VALA_EXTERN GType bob_launcher_action_target_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherActionTarget, g_object_unref)
VALA_EXTERN BobLauncherActionTarget* bob_launcher_action_target_construct (GType object_type);
VALA_EXTERN BobLauncherAction* bob_launcher_action_construct (GType object_type);
VALA_EXTERN gboolean bob_launcher_action_do_execute (BobLauncherAction* self,
                                         BobLauncherMatch* source,
                                         BobLauncherMatch* target);
VALA_EXTERN gboolean bob_launcher_action_execute (BobLauncherAction* self,
                                      BobLauncherMatch* source,
                                      BobLauncherMatch* target);
VALA_EXTERN BobLauncherScore bob_launcher_action_get_relevancy (BobLauncherAction* self,
                                                    BobLauncherMatch* m);
VALA_EXTERN GType bob_launcher_unknown_match_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherUnknownMatch, g_object_unref)
VALA_EXTERN gchar* bob_launcher_unknown_match_get_mime_type (BobLauncherUnknownMatch* self);
VALA_EXTERN BobLauncherUnknownMatch* bob_launcher_unknown_match_new (const gchar* query_string);
VALA_EXTERN BobLauncherUnknownMatch* bob_launcher_unknown_match_construct (GType object_type,
                                                               const gchar* query_string);
VALA_EXTERN GType bob_launcher_plugin_base_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherPluginBase, g_object_unref)
VALA_EXTERN GType bob_launcher_search_base_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BobLauncherSearchBase, g_object_unref)
VALA_EXTERN gboolean bob_launcher_plugin_base_activate (BobLauncherPluginBase* self);
VALA_EXTERN void bob_launcher_plugin_base_deactivate (BobLauncherPluginBase* self);
VALA_EXTERN void bob_launcher_plugin_base_on_setting_changed (BobLauncherPluginBase* self,
                                                  const gchar* key,
                                                  GVariant* value);
VALA_EXTERN gboolean bob_launcher_plugin_base_handle_base_settings (BobLauncherPluginBase* self,
                                                        GSettings* settings,
                                                        const gchar* key);
VALA_EXTERN gchar* bob_launcher_plugin_base_get_mime_type (BobLauncherPluginBase* self);
VALA_EXTERN gchar* bob_launcher_plugin_base_to_string (BobLauncherPluginBase* self);
VALA_EXTERN void bob_launcher_plugin_base_find_for_match (BobLauncherPluginBase* self,
                                              BobLauncherMatch* match,
                                              ActionSet* rs);
VALA_EXTERN BobLauncherPluginBase* bob_launcher_plugin_base_construct (GType object_type);
VALA_EXTERN gint16 bob_launcher_plugin_base_get_bonus (BobLauncherPluginBase* self);
VALA_EXTERN void bob_launcher_plugin_base_set_bonus (BobLauncherPluginBase* self,
                                         gint16 value);
VALA_EXTERN gboolean bob_launcher_plugin_base_get_enabled (BobLauncherPluginBase* self);
VALA_EXTERN void bob_launcher_plugin_base_set_enabled (BobLauncherPluginBase* self,
                                           gboolean value);
VALA_EXTERN GPtrArray* bob_launcher_plugin_base_get_search_providers (BobLauncherPluginBase* self);
VALA_EXTERN void bob_launcher_plugin_base_set_search_providers (BobLauncherPluginBase* self,
                                                    GPtrArray* value);
VALA_EXTERN void bob_launcher_search_base_search (BobLauncherSearchBase* self,
                                      ResultContainer* rs);
VALA_EXTERN void bob_launcher_search_base_search_shard (BobLauncherSearchBase* self,
                                            ResultContainer* rs,
                                            guint shard_id);
VALA_EXTERN BobLauncherSearchBase* bob_launcher_search_base_construct (GType object_type);
VALA_EXTERN gboolean bob_launcher_search_base_get_prefer_insertion_order (BobLauncherSearchBase* self);
VALA_EXTERN guint bob_launcher_search_base_get_shard_count (BobLauncherSearchBase* self);
VALA_EXTERN void bob_launcher_search_base_set_shard_count (BobLauncherSearchBase* self,
                                               guint value);
VALA_EXTERN guint bob_launcher_search_base_get_update_interval (BobLauncherSearchBase* self);
VALA_EXTERN void bob_launcher_search_base_set_update_interval (BobLauncherSearchBase* self,
                                                   guint value);
VALA_EXTERN gboolean bob_launcher_search_base_get_enabled_in_default_search (BobLauncherSearchBase* self);
VALA_EXTERN void bob_launcher_search_base_set_enabled_in_default_search (BobLauncherSearchBase* self,
                                                             gboolean value);
VALA_EXTERN const gchar* bob_launcher_search_base_get_regex_match (BobLauncherSearchBase* self);
VALA_EXTERN void bob_launcher_search_base_set_regex_match (BobLauncherSearchBase* self,
                                               const gchar* value);
VALA_EXTERN GRegex* bob_launcher_search_base_get_compiled_regex (BobLauncherSearchBase* self);
VALA_EXTERN gulong plugin_loader_initialize_plugin (BobLauncherPluginBase* plg,
                                        GSettings* settings);
VALA_EXTERN gint plugin_loader_alpha_comp (BobLauncherPluginBase* a,
                               BobLauncherPluginBase* b);
VALA_EXTERN gint plugin_loader_shard_comp (BobLauncherSearchBase* a,
                               BobLauncherSearchBase* b);
VALA_EXTERN gchar* bob_launcher_bob_app_info_get_string_from_group (GDesktopAppInfo* info,
                                                        const gchar* group_name,
                                                        const gchar* key);
VALA_EXTERN void bob_launcher_threading_run (BobLauncherThreadingTaskFunc task,
                                 gpointer task_target,
                                 GDestroyNotify task_target_destroy_notify);
VALA_EXTERN gulong bob_launcher_threading_spawn_joinable (BobLauncherThreadingTaskFunc task,
                                              gpointer task_target,
                                              GDestroyNotify task_target_destroy_notify);
VALA_EXTERN void bob_launcher_threading_join (gulong thread_id);
VALA_EXTERN gint bob_launcher_threading_atomic_inc (gint* ptr);
VALA_EXTERN gint bob_launcher_threading_atomic_dec (gint* ptr);
VALA_EXTERN void bob_launcher_threading_atomic_store (gint* ptr,
                                          gint value);
VALA_EXTERN gboolean bob_launcher_strings_is_word_boundary (gunichar c);
VALA_EXTERN gchar* bob_launcher_strings_replace (const gchar* str,
                                     const gchar* chars,
                                     const gchar* replacement);
VALA_EXTERN gchar* bob_launcher_strings_decode_html_chars (const gchar* input);
VALA_EXTERN gchar* bob_launcher_utils_get_thumbnail_path (const gchar* file_path,
                                              gint size);
VALA_EXTERN gboolean bob_launcher_utils_launch_file (GFile* file);
VALA_EXTERN void bob_launcher_utils_launch_app (GAppInfo* app_info);
VALA_EXTERN void bob_launcher_utils_launch_uri (const gchar* uri);
VALA_EXTERN gboolean bob_launcher_utils_is_all_lowercase (const gchar* str);
VALA_EXTERN gchar* bob_launcher_utils_format_modification_time (GDateTime* now,
                                                    GDateTime* mod_time);
VALA_EXTERN void bob_launcher_utils_open_command_line (const gchar* command,
                                           const gchar* app_name,
                                           gboolean needs_terminal,
                                           const gchar* working_dir);
VALA_EXTERN gint run_launcher (gint socket_fd);

G_END_DECLS

#endif
